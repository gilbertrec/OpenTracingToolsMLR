Security, Observability & DevOps Comfort Zone
Gadi Naor, CTO and co-founder, Alcide
Alcide Updates
Alcide Updates

Jan 20, 2020·3 min read




On Observability & Monitoring
Observability is achieved by making health and operational measurements available from within the system that you wish to monitor. Monitoring is the actual task of collecting data measurements and displaying this data.
After you’ve made the system observable, and after you’ve collected the data using a monitoring tool, Analysis of the data either manually or automatically should yield actionable insights. Without meaningful analysis, one would fall short of the whole purpose of making the system observable and performing monitoring in the first place. The better your analysis capabilities are, the more valuable your investments in observability and monitoring become.
Recipe for Kubernetes Security
Knowing which security risks affect your system is the first step toward addressing them. A practical implementation of this paradigm would follow the following recipe:
Security oriented observations exposed as metrics. For example:
Gauge that captures the current number of Critical level vulnerabilities of the Kubernetes Worker Node software (kubelet, container runtime, kube-proxy…)
Gauge that captures the count of Critical CVEs of the presently running envoy sidecars
Gauge that captures the non-whitelisted privileged Daemon Sets
2. Collecting security metrics by using existing monitoring pipeline. For example:
Prometheus, a pluggable metrics collection and storage system that can act as a data source for Grafana, a metrics visualization frontend. Prometheus requires the collectors to pull metrics from each from security agents that expose such observable metrics.
Datadog, NewRelic, Sumo Logic & similar APM solutions that can ingest metrics via the platform APIs
3. Monitoring security metrics by using the already existing monitoring stack. For example:
Prometheus enables to monitor the security metrics over time as well as define alerts triggered by specific system behavior
With Datadog, one simple example can be by having the user define custom dashboards that graph metrics, or define a threshold based alert by comparing metric values to a static threshold.
Kubernetes Security Observability Companion
Alcide Advisor simplifies the security assessment of the entire Kubernetes cluster, by providing a single window to monitor all the configuration related risks such as Kubernetes software components vulnerability (CVE) scanning, identifying misplaced secrets, excessive API server secret access permissions, pod hardening, application of network policies, as well as Istio security configuration and best practices, Ingress controllers security best practices, Kubernetes API server access privileges scanning and Kubernetes operators security best practices.
The entire process is completely API driven, and carried over in the background without having any impact on apps or the cluster itself and expose security insights in a fully observable security metrics.
Bridging Ops & Security — Seamlessly and Continuously
Ops & Security teams, separately and together, try to reduce and potentially unify the number of tools they use to operate and monitor cloud systems. It turns out that Kubernetes and specifically Kubernetes security is no different.

Grafana dashboard visualizes and inspects latest security hygiene and risk insights
Alcide Advisor — Delivering Security at Ops Comfort Zone
Security stakeholders can define what to scan, scope of the scan, and frequency.
Ops teams responsible for deploying the Alcide Advisor — to running clusters as part of the standard monitoring stack with prometheus, elastic, datadog and alike.
Alcide Advisor reports security scan results through:
Exposed prometheus scraping endpoint, with set of security metrics that captures cluster security hygiene and security risk levels.
Alcide Advisor cloud-based central security management dashboard(s)
A convenience Grafana dashboard is available to visualize and inspect latest security hygiene and risk insights

Finally, when security metrics are wired into our telemetry/monitoring stack, we can leverage all the existing tool chains being used to trigger & route alerts and notifications about security related “negative” drifts or risk degradation.
Try Kubernetes Advisor in your comfort zone in 4 simple steps:
Create a Free Alcide Account
Login and deploy Alcide Advisor into your cluster
Enable the metrics endpoint and create prometheus service monitor
Consume findings with the rest of your Grafana dashboards