How to monitor your Java applications (JVM Metrics) using Datadog
Setup datadog monitoring for JVMs (Java applications)
Kasun de Silva
Kasun de Silva

Jan 27, 2020Â·2 min read





Source: Datadog
Setting up datadog monitoring to Monitor JVMs is one of the interesting tasks that I have come across during my work as a DevOps engineer. You can find the step by step guide to configure the datadog agent in your VM to achieve this below.
Step 1: Install the datadog-agent in the Virtual Machine.
Use the easy one-step install. Run the following command in your VM where the JVM runs.
DD_AGENT_MAJOR_VERSION=7 DD_API_KEY=<API_KEY> bash -c "$(curl -L https://raw.githubusercontent.com/DataDog/datadog-agent/master/cmd/agent/install_script.sh)"
Your Agent should be running and functioning properly. It will continue to run in the background and submit metrics to Datadog. If you ever want to stop the Agent, run:
sudo stop datadog-agent
And run it again run:
sudo start datadog-agent
To configure hostname into datadog-agent, Open datadog.yaml
sudo vim /etc/datadog-agent/datadog.yaml
Add the following line (Change the hostname as required)
hostname: matillion-host
Step 2: Install java-agent into the Matillion VM
Next, download dd-java-agent.jar that contains the Agent class files:
sudo wget -O /etc/datadog-agent/dd-java-agent.jar 'https://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.datadoghq&a=dd-java-agent&v=LATEST'
Configure java agent in JAVA_OPTS, Open /etc/sysconfig/tomcat8
In older versions of Matillion, JAVA_OPTS is configured in /etc/tomcat8/tomcat8.conf, So make sure you open the correct file.
sudo vim /etc/sysconfig/tomcat8
Modify JAVA_OPTS variable adding -javaagent:/etc/datadog-agent/dd-java-agent.jar
It should look like something like below.
JAVA_OPTS="
-Djavax.net.ssl.trustStore=/usr/lib/jvm/jre/lib/security/cacerts \
-Djavax.net.ssl.trustStorePassword=changeit \ 
-Djava.security.egd=file:/dev/./urandom \
-javaagent:/etc/datadog-agent/dd-java-agent.jar \
-XX:+UseG1GC \ 
-XX:OnOutOfMemoryError=/usr/share/emerald/WEB-INF/classes/scripts/oom.sh"
Then restart the datadog-agent
sudo restart datadog-agent
After restarting the datadog-agent it should start sending JVM metrics to datadog.
The following metrics are collected by default after enabling JVM metrics.

Source: Datadog
References:
https://www.datadoghq.com/blog/java-runtime-monitoring-with-jvm-metrics/
https://docs.datadoghq.com/tracing/setup/java/
https://docs.datadoghq.com/tracing/runtime_metrics/?tab=java