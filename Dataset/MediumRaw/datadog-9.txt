Step by Step with Pictures: Forward and Query your AWS Lambda Logs with Datadog
Garrett Sweeney
Garrett Sweeney
Follow
Feb 28 · 4 min read





I recently posted an article on how to get set up with Datadog’s AWS Integration and successfully received metrics. Today I’ll be working on forwarding over my CloudWatch logs to Datadog.
Step By Step with Pictures: Installing the Datadog AWS Integration and Setting up a Dashboard
You too can use Datadog to monitor your applications!
medium.com

All of the documentation for this set up is located in the following places:
https://app.datadoghq.com/logs/onboarding/cloud
https://docs.datadoghq.com/logs/guide/send-aws-services-logs-with-the-datadog-kinesis-firehose-destination/?tab=kinesisfirehosedeliverystream
https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs//SubscriptionFilters.html#DestinationKinesisExample
To start, I’ll check to see if any logs exist already.
I start on the Datadog Quick Start page.

The Datadog Quick Start page
I hover over Logs and click Search.

I am presented with the Logs page. Yikes, no logs!

Luckily, I see a Getting Started guide under the Logs menu.

I specify Cloud and select AWS.

I’m presented with a few ways of forwarding logs via Kinesis Firehose or CloudFormation. Today I select Kinesis Firehose.

I click the “Create delivery stream” link and am presented with the AWS Console. I ensure I’m in the correct region.

Per the docs, I give it a name and select the “Direct PUT or other sources”

I set SSE with AWS-owned CMK, but this is up to you. I then hit “Next”.

Per the docs, I disable data transformation and record transformation.

I select Third party services provider, and select Datadog from the list.

I configure with my API key, specify the data I want to backup to S3, and click “Next”.

I leave the Configure settings the same, with the exception of enabling S3 encryption and click “Next”.

Step 4 is to configure the stream settings
Finally, I review the data and click the blue “Create delivery stream” button.

Step 5 is to review the Kinesis Stream before creation
After I click create, I land on the Kinesis Service page where I can see my new stream.

The Kinesis Firehose Delivery Stream is created
I need to create a role that allows CW to put to Kinesis. I’m using this trust policy, since my resources are in us-east-2.

I use the AWS CLI to create a new role with the trust policy from the previous step.

I create a Permissions document. I’m using us-east-2.

I use the AWS CLI to attach the policy to the role.

I then create the Subscription Filter using the Kinesis Stream and IAM role created above.

Note! I first received an error like this:
An error occurred (InvalidParameterException) when calling the PutSubscriptionFilter operation: Could not deliver test message to specified Firehose stream. Check if the given Firehose stream is in ACTIVE state.
To fix, I updated the policy for the exact deliverystream resource and allowed firehose PutRecord and PutRecordBatch actions.

I went back to my log group and verified that the Subscription was created correctly.

Note the new Subscription filter in the Subscription Filters window
I now have my AWS Lambda logs in Datadog!

Reach out with a comment if you have any questions. If you appreciated the content, I am thankful for a clap!