Monitoring EC2 And Apache with Data Dog
ahmed qazi
ahmed qazi

Mar 2, 2019·6 min read




DataDog is one of the best monitoring tools that provide a variety of different services that you can use to obtain metrics, graphs, alerts, logs and so much more. If you are interested in monitoring your instances, web servers or containers DataDog is the tool you should consider. As the heading suggests in this tutorial, I will be monitoring my AWS EC2 instance with Apache so let’s dive into it.

Alerts Dashboard for Datadog
Prerequisites
It is important to remember that based on your choice of the distro (Rpm or Debian ) specific paths for files will change.
RPM based EC2 Instance: Amazon Linux AMI is RPM based distro, I have merely chosen it because I am using an rpm distro daily you could go for a Debian based distro like Ubuntu.
DataDog Account-DataDog allows 14 days of trial for a newly signed up account. For testing purpose, I will be using a trial account.
Vim Experience
Cup of Coffee
Installing the DataDog Agent:

That is how I imagine an agent.
An agent is a person who acts on behalf of another person or organization.
What is a DataDog Agent
To put it in layman terms DataDog agent is a program that runs on your desired instance, it collects the necessary information required for monitoring and various other services and sends this information to the DataDog.
Installing the DataDogAgent

Visualization of Steps 2,3 and 4
SSH into your Instance(You can follow this guide and learn to SSH into your Instance).
Login into your DataDog Account.
Click on the Agent Tab and select your distro (Amazon AMI in this case).
Copy the one-step install code and paste it in the terminal to install
Once the Agent is installed depending on the distro, you can run the commands and check if your agent is running.

DataDog Dog Documentation Page
Basic Commands for DataDog Agent-DataDog provides very well structured documentation for commands and usage, depending on your distro of choice the commands will vary so you can use this link and choose the commands for your distro.

Commands for Amazon AMI
Post Agent Installation
Once the agent is installed, it is important to check the status of the agent. If the agent is running, we can check metrics of this instance by using DataDog client app. If the instance is displayed in the dashboard, then the DataDog agent has successfully formed a connection between the instance and the DataDog client app.
sudo service datadog-agent status

DataDog Agent Status
Since the DataDog agent is active and running, I can now check if my instance is registered with the DataDog client app.
Click on the Infrastructure
Select the Infrastructure list
You will see an instance id (00788fecf7da7b4da)
Double click on it and you will see the real-time metrics

Visualization of Steps
Apache Installation
Since our instance is already being monitored, we can now install Apache and monitor it as well. These commands below install and start apache web server.
sudo yum install -y httpd
sudo systemctl status httpd
sudo systemctl enable httpd
sudo systemctl start httpd
Configuring Apache for DataDog
For DataDog to work, we must first ensure that the mod_status is loaded in apache. This module is responsible for the Apache web server load metrics and page statics.
By using the command below
httpd -M |grep status module #RPM based distro
apache2ctl -M                #Debain based distro

Shows that the Status_Mod is loaded
Since the Status _Module is loaded, the next step would be to enable the server status page so that the metrics can be captured.
#It is a good idea to back up  the conf file incase we need to #rollback changes.
cp /etc/httpd/conf/httpd.conf     /etc/httpd/conf/httpd_bk.conf #RPM based
sudo vim /etc/httpd/conf/httpd.conf             #RPM based
sudo vim /etc/apache2/mods-enabled/status.conf  #debain based
Paste the following text in the httpd.conf file
<Location /server-status>
    SetHandler server-status
    Order Deny,Allow
    Deny from all
    Allow from 127.0.0.1
</Location>
ExtendedStatus On
Restart the apache server for changes to take place
sudo systemctl restart httpd
Check the following URL and ensure that you get the HTTP status 200
curl -kI  http://localhost/server-status

HTTP/1.1 200 OK
Configuring Data Agent For Apache
Lastly, we need to configure DataDog agent so that it can collect the metrics and logs from the web server and push them to the DataDog client app.
Edit the DataDog conf.yaml.example for apache.d and save it as conf.yaml.
cd /etc/datadog-agent/conf.d/apache.d
vim conf.yaml.example
#Uncomment the following lines in conf.yaml.example 
instances:
  - apache_status_url: http://localhost/server-status?auto
#Save it as conf.yaml

DataDog Configuration File
If all the amendments are done properly you should now be able to see Apache metrics in your DataDog app.

Apache Metrics
Logs
When I first started working with DataDog configuring logs seemed to be the most difficult part. I had to spend an entire day to configure these logs but in the end, I prevailed with the help of my colleague (@Dodson ). Here are the steps that I used to obtain the logs in DataDog.
Edit the DataDog YAML file and enable the logs.It is important to remember that the YAML files are sensitive when it comes to alignment make sure you use a YAML validator to be on the safe side.
#Path for datadog yaml file
cd /etc/datadog-agent
sudo vim datadog.yaml
#uncomment and enable the logs and then save the file
logs_enabled: True

logs must be enabled
Edit the conf.yaml file in apache.d to set the path and service of the apache logs. It is important to know where your logs are kept as DataDog will be exporting these logs. The default configuration that is commented in the datadog.yaml has a different path for logs folder.
Before I proceed ahead, I will search the path for my logs folder as I will be adding it in the configuration soon.
I will also match the logs name, the default names for logs in the datadog.yaml are error.log and access.log.Upon my investigation, I noticed that my log names were error_log and access_log.
#Path where my logs are actually stored
/var/log/httpd
#Path
cd /etc/datadog-agent/conf.d/apache.d
sudo vim conf.yaml
#uncomment the lines from 60 to 70 while mainting the alignment

Verified Path for the Logs
Permissions for logs
For the logs to be fetched by DataDog, we need to give certain permissions to the folder that contains logs. Since my logs are in /var/log/httpd ,the httpd will be granted certain permissions.
cd /var/log
chmod 655 -R httpd
Test!
It is time to test your workings.
Restart DataDog
sudo service datadog-agent restart
Check the DataDog Status
sudo datadog-agent status

Logs are working!
Check your DataDog Dashboard for the logs.

logs are displayed at the DataDog Dashboard
Final Note
In this tutorial, we have managed to monitor an EC2 instance with Apache and its logs.