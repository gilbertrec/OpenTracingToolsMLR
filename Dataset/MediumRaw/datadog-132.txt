Collector Comparison: Telegraf vs Collectd vs DD-agent
Netsil
Netsil
Follow
May 30, 2017 · 4 min read





(Originally published on Netsil’s blog)
Most modern application monitoring systems consist of the following 3 core components:
Collector — daemon(s) to gather metrics
Time Series database — for storage of real-time, high volume metrics
Query & Visualization — that enables queries and display charts to understand metrics
We have already covered time series database comparison including InfluxDB, Cassandra and Druid. On the visualization front, the primary shift is from a dashboard-centric approach to more ad-hoc query-centric UIs. The Netsil Analytics blog post provides examples of query-centric approach to analyze metrics for monitoring. In this post, we compare the popular collector daemons and present an overview of Netsil collectors.

Three Core Components of Modern Application Monitoring
Collector Daemon Comparison
Collectd, Telegraf and dd-agent are among 3 popular collector daemons. The table below provides comparison for these collectors across multiple dimensions. While collectd is the oldest and most mature among the three, it is lacking in several key integrations with widely used systems. Some examples of missing collectd integrations include container frameworks such as Kubernetes, Mesos, Consul service discovery and etcd key-value store. Most modern applications also heavily utilize tags. Collectd doesn’t offer any good mechanism to ingest tags for the metrics.
Both Telegraf and dd-agent are relatively new and still maturing compared to collectd. While Telegraf is contributed by folks behind InfluxDB, dd-agent is a fork of sd-agent originally open sourced by Server Density and later forked by Datadog. The implementation language, Python for dd-agent and Go for Telegraf, may incur performance overhead compared to collectd which is implemented in C.
However, both dd-agent and Telegraf offer extensive integrations covering most of the commonly used systems of today. dd-agent edges out Telegraf with more than 150 integrations and support for both tags as well as events in custom metrics. But dd-agent doesn’t have good support for any time-series database out-of-the-box whereas Telegraf supports quite a few.

Figure 2. Comparison of Telegraf vs collectd vs dd-agent
Overview of Netsil Collectors
Netsil Application Operations Center (AOC) collector is a combination of open source dd-agent and an additional pcap based agent. This results in the following data sources generated by AOC collectors:
Data generated by capturing network interactions via pcap or SSLSplit This data is categorized under respective protocols such as HTTP, MySQL, DNS, etc. The data provides valuable insights into the golden signals of latency, throughput and error rates for services. Additionally, all the key application level attributes such as HTTP Status Code, URI paths, or MySQL Query Strings, etc. are preserved and available for further analysis of the data.
AOC data collectors include open source dd-agent for gathering specific system level insights such as operating system level metrics on cpu, memory, disk i/o; or performance metrics from MySQL/PostgreSQL servers. Extensive set of applications are integrated with dd-agent and all of them are supported in the AOC as well.
Custom application metrics, tags and events collected using dogstatsd.

Figure 1. Netsil AOC Auto-discovered Application Map and Golden Signals for Services
As a result of the above rich datasources, the AOC not only provides real-time metrics on all the popular application components but also leverages network interactions to map the dependencies among the services (see figure 1). The metrics from pcap based packet analysis provide dependency information as well as insights for the golden signals — latency, error rates and throughput of services.
For Site Reliability Engineers (SREs) and operations teams, the combination of real-time map and metrics is extremely valuable for effectively monitoring health and performance of modern applications. And the best part is Netsil doesn’t require any code change or code instrumentation! You can get started free with Netsil map and monitoring today.
Also, we would recommend to check out our very popular whitepaper on time-series database comparison which complements this post on collector comparison.